(function() {var type_impls = {
"pnet_packet":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ExtensionPacket%3C'p%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-Debug-for-ExtensionPacket%3C'p%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExtensionPacket%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-ExtensionPacket%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.new\" class=\"fn\">new</a>&lt;'p&gt;(packet: &amp;'p [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new ExtensionPacket. If the provided buffer is less than the minimum required\npacket size, this will return None.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.owned\" class=\"fn\">owned</a>(packet: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'static&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new ExtensionPacket. If the provided buffer is less than the minimum required\npacket size, this will return None. With this constructor the ExtensionPacket will\nown its own data and the underlying buffer will be dropped when the ExtensionPacket is.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_immutable\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.to_immutable\" class=\"fn\">to_immutable</a>&lt;'p&gt;(&amp;'p self) -&gt; <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;</h4></section></summary><div class=\"docblock\"><p>Maps from a ExtensionPacket to a ExtensionPacket</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume_to_immutable\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.consume_to_immutable\" class=\"fn\">consume_to_immutable</a>(self) -&gt; <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'a&gt;</h4></section></summary><div class=\"docblock\"><p>Maps from a ExtensionPacket to a ExtensionPacket while consuming the source</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.minimum_packet_size\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub const fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.minimum_packet_size\" class=\"fn\">minimum_packet_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The minimum size (in bytes) a packet of this type can be. It’s based on the total size\nof the fixed-size fields.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.packet_size\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.packet_size\" class=\"fn\">packet_size</a>(_packet: &amp;<a class=\"struct\" href=\"pnet_packet/ipv6/struct.Extension.html\" title=\"struct pnet_packet::ipv6::Extension\">Extension</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The size (in bytes) of a Extension instance when converted into\na byte-array</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_next_header\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.get_next_header\" class=\"fn\">get_next_header</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pnet_packet/ip/struct.IpNextHeaderProtocol.html\" title=\"struct pnet_packet::ip::IpNextHeaderProtocol\">IpNextHeaderProtocol</a></h4></section></summary><div class=\"docblock\"><p>Get the value of the next_header field</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_hdr_ext_len\" class=\"method\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><h4 class=\"code-header\">pub fn <a href=\"pnet_packet/ipv6/struct.ExtensionPacket.html#tymethod.get_hdr_ext_len\" class=\"fn\">get_hdr_ext_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Get the hdr_ext_len field.</p>\n</div></details></div></details>",0,"pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPacket-for-ExtensionPacket%3C'p%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-FromPacket-for-ExtensionPacket%3C'p%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p&gt; <a class=\"trait\" href=\"pnet_packet/trait.FromPacket.html\" title=\"trait pnet_packet::FromPacket\">FromPacket</a> for <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.T\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.T\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"pnet_packet/trait.FromPacket.html#associatedtype.T\" class=\"associatedtype\">T</a> = <a class=\"struct\" href=\"pnet_packet/ipv6/struct.Extension.html\" title=\"struct pnet_packet::ipv6::Extension\">Extension</a></h4></section></summary><div class='docblock'>The type of the packet to convert from.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_packet\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#method.from_packet\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pnet_packet/trait.FromPacket.html#tymethod.from_packet\" class=\"fn\">from_packet</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pnet_packet/ipv6/struct.Extension.html\" title=\"struct pnet_packet::ipv6::Extension\">Extension</a></h4></section></summary><div class='docblock'>Converts a wire-format packet to #[packet] struct format.</div></details></div></details>","FromPacket","pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Packet-for-ExtensionPacket%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-Packet-for-ExtensionPacket%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"pnet_packet/trait.Packet.html\" title=\"trait pnet_packet::Packet\">Packet</a> for <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.packet\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#method.packet\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pnet_packet/trait.Packet.html#tymethod.packet\" class=\"fn\">packet</a>&lt;'p&gt;(&amp;'p self) -&gt; &amp;'p [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;p [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Retrieve the underlying buffer for the packet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#method.payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pnet_packet/trait.Packet.html#tymethod.payload\" class=\"fn\">payload</a>&lt;'p&gt;(&amp;'p self) -&gt; &amp;'p [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;p [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Retrieve the payload for the packet.</div></details></div></details>","Packet","pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PacketSize-for-ExtensionPacket%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-PacketSize-for-ExtensionPacket%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"pnet_packet/trait.PacketSize.html\" title=\"trait pnet_packet::PacketSize\">PacketSize</a> for <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.packet_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#method.packet_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pnet_packet/trait.PacketSize.html#tymethod.packet_size\" class=\"fn\">packet_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the calculated size of the packet.</div></details></div></details>","PacketSize","pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ExtensionPacket%3C'p%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-PartialEq-for-ExtensionPacket%3C'p%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"],["<section id=\"impl-StructuralPartialEq-for-ExtensionPacket%3C'p%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pnet_packet/ipv6.rs.html#46\">source</a><a href=\"#impl-StructuralPartialEq-for-ExtensionPacket%3C'p%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"pnet_packet/ipv6/struct.ExtensionPacket.html\" title=\"struct pnet_packet::ipv6::ExtensionPacket\">ExtensionPacket</a>&lt;'p&gt;</h3></section>","StructuralPartialEq","pnet_packet::ipv6::HopByHopPacket","pnet_packet::ipv6::DestinationPacket"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()